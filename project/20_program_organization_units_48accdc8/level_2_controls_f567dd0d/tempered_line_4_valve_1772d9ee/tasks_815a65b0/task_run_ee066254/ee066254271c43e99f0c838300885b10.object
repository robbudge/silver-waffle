{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)ee066254-271c-43e9-9f0c-838300885b10","ParentGuid":"(Guid)1772d9ee-1e44-4cf5-8acc-7a30a562c513","Name":"(string)Task_Run","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)815a65b0-ae33-499b-a4e3-6d784fa34f74"}]}}}}]},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)IF Local_Task<>eTempered_Task.Run THEN\n\tLocal_Task:=eTempered_Task.Run;\n\tLocal_Status:=eTempered_Status.Starting;\n\tON_Target:=FALSE;\n\tTask_Ton.IN:=FALSE;\n\tTemperature_PID.PLC_Target:=Temperature.Target;\nEND_IF;\n\nAUX();\nAlarms();\nMath();\nPID_CTRL();\nACV_CTRL();\nTask_Ton();\n\nHW_FIT.Rate.Alarm_Config.Setpoints.Hi_Hi_Alarm\t:=Config_Data.HW_Target_Flow+Rate.Alarm_Window;\nHW_FIT.Rate.Alarm_Config.Setpoints.Hi_Warn\t\t:=Config_Data.HW_Target_Flow+Rate.Warn_Window;\nHW_FIT.Rate.Alarm_Config.Setpoints.Low_warn\t\t:=Config_Data.HW_Target_Flow-Rate.Warn_Window;\nHW_FIT.Rate.Alarm_Config.Setpoints.Low_Low_Alarm\t\t:=Config_Data.HW_Target_Flow-Rate.Alarm_Window;\nHW_FIT.Rate.Alarm_Config.Setpoints.Alarm_Debounce\t\t\t:=Rate.Alarm_Delay;\n\n\nCW_FIT.Rate.Alarm_Config.Setpoints.Hi_Hi_Alarm\t:=Config_Data.CW_Target_Flow+Rate.Alarm_Window;\nCW_FIT.Rate.Alarm_Config.Setpoints.Hi_Warn\t\t:=Config_Data.CW_Target_Flow+Rate.Warn_Window;\nCW_FIT.Rate.Alarm_Config.Setpoints.Low_warn\t\t:=Config_Data.CW_Target_Flow-Rate.Warn_Window;\nCW_FIT.Rate.Alarm_Config.Setpoints.Low_Low_Alarm\t\t:=Config_Data.CW_Target_Flow-Rate.Alarm_Window;\nCW_FIT.Rate.Alarm_Config.Setpoints.Alarm_Debounce\t\t\t:=Rate.Alarm_Delay;\n\n\nAlarm_Window_Convert(Window:= Temperature,Config:=Combined_Temp.Alarm_Config);\nCombined_temp.Alarm_Config.Setpoints.Alarm_Debounce:=0;\n\n\n\nConfig_Data.Status.eStatus:=Status_Test(Local_Status);\n\nConfig_Data.Base_Flow:=Rate.Target;\n\n\nIF Temperature_PID.PLC_Enable THEN\n\tConfig_Data.Target_Temperature:= Temperature_PID.CV;\nELSE\n\tConfig_Data.Target_Temperature:= Temperature_PID.PLC_Target;\nEND_IF;\n\n\n\n\n\n//CW_KV_Index:= LIMIT(0,TO_INT(Config_Data.CW_Target_KV*KV_Index_Scalar),100);\n//HW_KV_Index:= LIMIT(0,TO_INT(Config_Data.HW_Target_KV*KV_Index_Scalar),100);\n\nIF CW_Target_KV_Index>0 AND Kv_Curve[CW_Target_KV_Index]>0 THEN\tConfig_Data.CW_Base_CV:=Kv_Curve[CW_Target_KV_Index]; END_IF;\nIF HW_Target_KV_Index>0 AND Kv_Curve[HW_Target_KV_Index]>0 THEN\tConfig_Data.HW_Base_CV:=Kv_Curve[HW_Target_KV_Index]; END_IF;\t\n\n\nIF Config_Data.CW_DP > 5 THEN\tCW_CV_Mode_3:=FindClosestIndexSorted(ArrayIn:=CV_2_KV,TargetValue:=Config_Data.CW_Target_KV); END_IF;\nIF Config_Data.HW_DP > 5 THEN\tHW_CV_Mode_3:=FindClosestIndexSorted(ArrayIn:=CV_2_KV,TargetValue:=Config_Data.HW_Target_KV);\tEND_IF;\n\t\nCASE Run_mode OF\n\t\n\t0:\n\t\tCW_PID.FF:=0.0;\n\t\tHW_PID.FF:=0.0;\n\t\tConfig_Data.HW_FF:=0;\n\t\tConfig_Data.CW_FF:=0;\n\t\n\t1:\n\t\tTemp_C:=TO_INT(Unit_Convert(eFrom:=Temperature_Units,eTo:=eUnits.C,Source:=Combined_Temp.EU));\n\t\tFlow_LPM:=TO_INT(Unit_Convert(eFrom:=Flow_Units,eTo:=eUnits.lpm,Source:=Config_Data.Flow_Rate));\n\t\tConfig_Data.CW_Base_CV:=\tTemp_Flow_CV.Deg_C[Temp_C].lpm[Flow_LPM].CW_CV:=CW_PID.CV;\n\t\tConfig_Data.HW_Base_CV:= \tTemp_Flow_CV.Deg_C[Temp_C].lpm[Flow_LPM].HW_CV:=HW_PID.CV;\n\t\tIF Config_Data.HW_Target_Flow>0 THEN\tConfig_Data.HW_FF:=LIMIT(0, (Config_data.HW_Base_CV/Config_Data.HW_Target_Flow)*0.75, 20);\tEND_IF\n\t\tIF Config_Data.CW_Target_Flow>0 THEN\tConfig_Data.CW_FF:=LIMIT(0, (Config_data.CW_Base_CV/Config_Data.CW_Target_Flow)*0.75, 20);\tEND_IF\n\t\t\n\t2:\n\t\t\n\t\t\n\t\tIF Config_Data.HW_Target_Flow>0 AND Kv_Curve[HW_Target_KV_Index]>0 AND Kv_Curve[HW_Target_KV_Index]<100 THEN\n\t\t\tConfig_Data.HW_FF:=LIMIT(0, (Config_data.HW_Base_CV/Config_Data.HW_Target_Flow)*0.50, 20);\n\t\tEND_IF;\n\t\tIF  Config_Data.CW_Target_Flow>0 AND Kv_Curve[CW_Target_KV_Index]>0 AND Kv_Curve[CW_Target_KV_Index]<100 THEN\n\t\t\tConfig_Data.CW_FF:=LIMIT(0, (Config_Data.CW_Base_CV/Config_Data.CW_Target_Flow)*0.50, 20);\n\t\tEND_IF;\n\t\t\n\t3:\tIF Config_Data.HW_Target_Flow>0 AND Config_Data.CW_Target_Flow>0 THEN\n\t\t\tConfig_data.HW_Base_CV:=\tSEL(HW_CV_Mode_3=0,TO_REAL(HW_CV_Mode_3),Config_data.HW_Base_CV);\n\t\t\tConfig_Data.CW_Base_CV:=\tSEL(CW_CV_Mode_3=0,TO_REAL(CW_CV_Mode_3),Config_data.CW_Base_CV);\n\t\t\t\n\t\t\tHW_CV_Ramp(IN:=LIMIT(0, (Config_data.HW_Base_CV/Config_Data.HW_Target_Flow)*0.750, 20),OUT=>Config_Data.HW_FF);\n\t\t\tCW_CV_Ramp(IN:=LIMIT(0, (Config_data.CW_Base_CV/Config_Data.CW_Target_Flow)*0.750, 20),OUT=>Config_Data.CW_FF);\n\t\t\t//Config_Data.HW_FF:=LIMIT(0, (Config_data.HW_Base_CV/Config_Data.HW_Target_Flow)*0.750, 20);\n\t\t\t//Config_Data.CW_FF:=LIMIT(0, (Config_Data.CW_Base_CV/Config_Data.CW_Target_Flow)*0.750, 20);\n\t\tEND_IF;\n\t\t\n\t\t\n\nEND_CASE;\n\n\n\n\n\n\n\n\n\nIF Config_Data.CW_FF>0 \tAND Config_data.HW_DP>2 AND Config_data.HW_DP<25 \tTHEN\tCW_PID.FF:=Config_Data.CW_FF; END_IF;\nIF Config_Data.HW_FF>0  AND Config_data.CW_DP>2 AND Config_data.CW_DP<25 \tTHEN\tHW_PID.FF:=Config_Data.HW_FF; END_IF;\t\n\n\n\nCASE\tConfig_data.Status.eStatus OF\n\teTempered_Status.Starting:\n\t\tIF Config_Data.Temperature_OK AND Config_Data.HW_Flow_OK AND Config_Data.CW_Flow_OK THEN\n\t\t\tLocal_Status:=eTempered_Status.Ready;\n\t\t\tTask_Run:=true;\n\t\tElse\n\t\t\tTask_Run:=FALSE;\n\t\tEND_IF;\n\teTempered_Status.Ready:\n\t\tTask_Run:=TRUE;\n\t\t\nEND_CASE\n\n\nIF  Kv_Curve[HW_KV_Index]=0 AND  HW_PID.Err<ABS(0.1) THEN Kv_Curve[HW_KV_Index]:=HW_PID.CV; END_IF;\nIF  Kv_Curve[CW_KV_Index]=0 AND  CW_PID.Err<ABS(0.1) THEN Kv_Curve[HW_KV_Index]:=CW_PID.CV; END_IF;\n\n\t\n","LineInfoPersistence":"(string)ee066254-271c-43e9-9f0c-838300885b10_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)METHOD Task_Run : BOOL\nVAR_INPUT\n\tRate:cAlarm_Window;\n\tTemperature:cAlarm_Window;\n\tVolume:REAL;\nEND_VAR\n\n\nVAR\n\tTemp_C:INT;\n\tFlow_LPM:INT;\n\t\n\t\n\tHW_CV_3:INT;\n\tCW_CV_3:INT;\n\t\nEND_VAR","LineInfoPersistence":"(string)ee066254-271c-43e9-9f0c-838300885b10_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}